{"version":3,"sources":["components/Button/Button.js","components/ButtonList/ButtonList.js","components/Project/Project.js","components/ProjectList/ProjectList.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Button","props","class","href","this","name","React","Component","ButtonList","className","buttons","map","button","technologies","description","defaultProps","Buttons","Project","style","minHeight","whyMade","technology","moreDetails","ProjectList","projects","project","App","fontSize","id","returnProjects","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5a90e644.chunk.js","sourcesContent":["import React from 'react';\r\n//import './Project.css';\r\n\r\nclass Button extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <div>\r\n      <a class=\"w3-button w3-theme w3-third\" href= {this.props.href}>{this.props.name}</a>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n\r\n\r\n","import React from 'react';\r\nimport Button from \"../Button/Button.js\"\r\n\r\n\r\nclass ButtonList extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n\r\n\r\n  <div className=\"w3-center\">\r\n\r\n          {\r\n        this.props.buttons.map(button =>{\r\n       return <Button\r\n          name={button.name}\r\n          button={button}\r\n          technologies={button.technologies}\r\n          description={button.description}\r\n          href= {button.href}/> })\r\n     }\r\n    \r\n  </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n//Set a default list to have a blank Buttons list so that we can use map still\r\nButtonList.defaultProps = {Buttons: []};\r\n\r\n\r\nexport default ButtonList;\r\n\r\n\r\n","import React from 'react';\r\n//import './Project.css';\r\nimport ButtonList from \"../ButtonList/ButtonList.js\"\r\n\r\n\r\nclass Project extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <div className=\"w3-third w3-margin-bottom\">\r\n      <div className=\"w3-card-4 w3-container\" style={{minHeight:'460px'}}>\r\n      <h1>{this.props.name}</h1>\r\n      <p>{this.props.whyMade}</p>\r\n\r\n      <div className=\"w3-container\">\r\n        {\r\n          this.props.technologies.map(technology =>{\r\n        return (\r\n        <div className=\"w3-half w3-margin-bottom w3-container\">\r\n          <div className=\"w3-card w3-container\">\r\n            <p>{technology.name}</p>\r\n          </div>\r\n        </div>)\r\n      })}\r\n      </div>\r\n\r\n      <p>{this.props.description}</p>\r\n      <p>{this.props.moreDetails}</p>\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Project;\r\n\r\n\r\n","import React from 'react';\r\nimport Project from \"../Project/Project.js\"\r\n\r\n\r\nclass ProjectList extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n\r\n  <div class=\"w3-row-padding\">\r\n\r\n    <div className=\"w3-row-padding w3-center w3-margin-top w3-margin-bottom\">\r\n\r\n      {this.props.projects.map(project =>{\r\n        return <Project\r\n            name={project.name}\r\n            project={project}\r\n            technologies={project.technologies}\r\n            description={project.description}\r\n            whyMade = {project.whyMade}\r\n            moreDetails = {project.moreDetails}\r\n            /> })\r\n      }\r\n      \r\n    </div>\r\n  </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n//Set a default list to have a blank projects list so that we can use map still\r\nProjectList.defaultProps = {projects: []};\r\n\r\n\r\nexport default ProjectList;\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport ProjectList from \"../ProjectList/ProjectList.js\"\nimport ButtonList from \"../ButtonList/ButtonList.js\"\n\n\n\nclass App extends React.Component{\n\n\n\n  //this function returns the projects I will be showing \n  returnProjects(){\n    return (\n    [ {name:\"Darren's Birthday Game\", \n        technologies:[{name:\"PhaserJS\"},{name:\"Did I use another technology\"},{name:\"I  think I must have\"}],\n        whyMade:\"A fun game to celebrate a quarantine birthday.\",\n        description:\"Complete 5 different games to get a birthday message.\",\n        moreDetails: \"I learned PhaserJS and adapted some games to create a custom game for a 10th birthday.  This was my first attempt at creating something with PhaserJS\"},\n      {name:\"Jammming\", \n        technologies:[{name:\"React\"}],\n        whyMade: \"Final project for 'Build Front-End Web Applications from Scratch' course on Codecademy\",\n        description:\"Uses the spotify API to create custom playlists. \",\n        moreDetails: \"Added the following custom abilities:\"},\n        \n      {name:\"Something Different To Check\", \n        technologies:[{name:\"PhaserJS\"}],\n        description:\"A fun game to celebrate a quarantine birthday\"},\n      {name:\"More pretend projects\", \n        technologies:[{name:\"PhaserJS\"}],\n        description:\"A fun game to celebrate a quarantine birthday\"}   ]);\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <header className = \"w3-theme w3-center w3-container\">\n            <h1 style ={{fontSize:100}}> Heather Overmeyer</h1>\n\n            {/*This displays the drop down menu*/}\n            <div class=\"w3-bar w3-theme\">\n              <div class=\"w3-dropdown-hover\">\n                <button class=\"w3-button w3-padding-32 w3-theme\">\n                  Find out more! <i class=\"fa fa-caret-down\"></i>\n                </button>\n                <div class=\"w3-dropdown-content w3-card-4 w3-bar-block\">\n                  <a href=\"#project\" class=\"w3-bar-item w3-button\">Projects </a>\n                  <a href=\"#experience\" class=\"w3-bar-item w3-button\">Work Experience</a>\n                  <a href=\"#contact\" class=\"w3-bar-item w3-button\">Contact</a>\n                </div>\n              </div>\n            </div>\n        </header>\n\n        <body>\n\n          <div>\n            <p>My name is Heather Overmeyer and I build things.</p>\n            <p>My name is Heather Overmeyer and I build things.</p>\n            <p>My name is Heather Overmeyer and I build things.</p>\n            <p>My name is Heather Overmeyer and I build things.</p>\n\n          </div>\n          <div className=\"w3-container w3-theme w3-center\">\n            <h2 id=\"projects\">Projects</h2>\n          </div>\n          <ProjectList projects={this.returnProjects()} />\n\n          <div className=\"w3-container w3-theme\">\n            <h2 id=\"experience\">Work Experience</h2>\n          </div>\n\n\n\n        </body>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}